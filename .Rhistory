strtime=rd[[i]]$Timings[[j]]$time,
rawtime=timeInS(rd[[i]]$Timings[[j]]$time)
))
}
}
lap.data=ddply(lap.data,.(driverId),transform,cuml=cumsum(rawtime))
#via http://stackoverflow.com/a/7553300/454773
lap.data$diff <- ave(lap.data$rawtime, lap.data$driverId, FUN = function(x) c(NA, diff(x)))
#lap.data=ddply(lap.data,.(driverId),transform,decmin=rawtime-min(rawtime))
#lap.data$topdelta=lap.data$rawtime-min(lap.data$rawtime)
lap.data
}
#' Extract Laps data from race data JSON object
#'
#' \code{getLapsData.path}
#' @param object containg race data
#' @return object containing laps data
getLapsData.path=function(rd.laps){
laps.data=rd.laps$MRData$RaceTable$Races[[1]]$Laps
laps.data
}
#' Generate dataframe containing lap data
#'
#' \code{lapsData.df}
#' @param integer season year for required data
#' @param character data format (json, XML)
#' @return dataframe containing lap data for a specific race
lapsData.df=function(year,raceNum){
rd.laps=getJSONbyURL(getLapsByYearRace.URL(year,raceNum))
ld=getLapsData.path(rd.laps)
formatLapData(ld)
}
#' Get dataframe for races by year
#'
#' \code{racesData.df}
#' @param integer season year for required data
#' @return dataframe containing race data for each year
racesData.df=function(year){
races.data=data.frame(
round=numeric(),
racename=character(),
circuitId=character()
)
rd=getJSONbyURL(getRacesDataByYear.URL(year))
races=rd$MRData$RaceTable$Races
for (i in 1:length(races)){
races.data=rbind(races.data,data.frame(
round=races[[i]]$round,
racename=races[[i]]$raceName,
circuitId=races[[i]]$Circuit$circuitId
))
}
races.data
}
#' Get dataframe for races by year
#'
#' \code{driversData.df}
#' @param integer season year for required data
#' @return dataframe containing race data for each year
driversData.df=function(year){
drivers.data=data.frame(
name=character(),
driverId=character()
)
drivers.json=fromJSON(getDriversByYear.URL(year))
drivers=drivers.json$MRData$DriverTable$Drivers
for (i in 1:length(drivers)){
if (is.na(drivers[[i]]['permanentNumber'])) permNumber=NA
else permNumber=drivers[[i]]['permanentNumber']
drivers.data=rbind(drivers.data,data.frame(
driverId=drivers[[i]]['driverId'],
name=drivers[[i]]['familyName'],
code=drivers[[i]]['code'],
permNumber=permNumber
))
}
drivers.data
}
#' Get dataframe for races by year
#'
#' \code{resultsData.df}
#' @param integer season year
#' @param integer race number in season
#' @return dataframe containing results data for a particular race
resultsData.df=function(year,raceNum){
rrj=getJSONbyURL(getRaceResultsByYearRace.URL(year,raceNum))#getRaceResultsData.full(raceNum)
rrd=rrj$MRData$RaceTable$Races[[1]]$Results
race.results.data=data.frame(
carNum=numeric(),
pos=numeric(),
driverId=character(),
constructorId=character(),
grid=numeric(),
laps=numeric(),
status=character(),
millitime=numeric(),
fastlapnum=numeric(),
fastlaptime=character(),
fastlaprank=numeric()
)
for (i in 1:length(rrd)){
race.results.data=rbind(race.results.data,data.frame(
carNum=as.integer(as.character(rrd[[i]]$number)),
pos=as.integer(as.character(rrd[[i]]$position)),
driverId=rrd[[i]]$Driver$driverId,
constructorId=rrd[[i]]$Constructor$constructorId,
grid=as.integer(as.character(rrd[[i]]$grid)),
laps=as.integer(as.character(rrd[[i]]$laps)),
status=rrd[[i]]$status,
#millitime=rrd[[i]]$Time$millis,
fastlapnum=hack1(rrd[[i]]),
fastlaptime=hack2(rrd[[i]]),
fastlaprank=hack3(rrd[[i]])
))
}
race.results.data$driverId=reorder(race.results.data$driverId, race.results.data$carNum)
race.results.data
}
#' Get race winner by season and year
#'
#' \code{raceWinner}
#' @param integer season year
#' @param integer race number
#' @return driverId for winner of a particular race
raceWinner=function(year,raceNum){
wURL=paste(API_PATH,year,"/",raceNum,"/results/1.json",sep='')
wd=fromJSON(wURL,simplify=FALSE)
wd$MRData$RaceTable$Races[[1]]$Results[[1]]$Driver$driverId
}
#' Parse JSON driver standings data
#'
#' \code{_driverStandings.json.parse}
#' @param integer season year
#' @param integer race number
#' @return dataframe containing standings for each year, by race
ergast.json.parse.driverStandings.df=function(dURL){
drj=getJSONbyURL(dURL)
drd=drj$MRData$StandingsTable$StandingsLists
driverStandings.data=data.frame()
for (i in 1:length(drd)){
for (j in 1:length(drd[[i]]$DriverStandings))
driverStandings.data=rbind(driverStandings.data,data.frame(
year=getNum(drd[[i]]$season),
driverId=drd[[i]]$DriverStandings[[j]]$Driver$driverId,
pos=getNum(drd[[i]]$DriverStandings[[j]]$position),
points=getNum(drd[[i]]$DriverStandings[[j]]$points),
wins=getNum(drd[[i]]$DriverStandings[[j]]$wins),
car=drd[[i]]$DriverStandings[[j]]$Constructors[[1]]$constructorId)
)
}
driverStandings.data
}
#' Get dataframe for season standings by year
#'
#' \code{seasonStandings.df}
#' @param integer season year
#' @param integer race number
#' @return dataframe containing standings for each year, by race
seasonStandings=function(year,race=''){
if (race=='')
dURL= paste('http://ergast.com/api/f1/',year,'/driverStandings.json',sep='')
else
dURL= paste('http://ergast.com/api/f1/',year,'/',race,'/driverStandings.json',sep='')
ergast.json.parse.driverStandings.df(dURL)
}
#' Get dataframe for individual driver standings by year
#'
#' \code{driverCareerStandings.df}
#' @param character driverId
#' @return dataframe containing standings for each driver at the end of each year
driverCareerStandings.df=function(driverId){
dURL=paste(API_PATH,'drivers/',driverId,'/driverStandings.json',sep='')
ergast.json.parse.driverStandings.df(dURL)
}
##==========  JSON PARSERS END
hack1=function(crap){
if (length(crap$FastestLap)>0)
getNum(crap$FastestLap$lap)
else NA
}
hack2=function(crap){
if (length(crap$FastestLap)>0)
timeInS(crap$FastestLap$Time$time)
else NA
}
hack3=function(crap){
if (length(crap$FastestLap)>0)
getNum(crap$FastestLap$rank)
else NA
}
source('https://gist.github.com/psychemedia/11187809#file-ergastr-core-r')
source('http://gist.github.com/psychemedia/11187809#file-ergastr-core-r')
require(RCurl)
source('http://gist.github.com/psychemedia/11187809#file-ergastr-core-r')
source('https://gist.github.com/psychemedia/11187809#file-ergastr-core-r')
source_gist('https://gist.github.com/psychemedia/11187809#file-ergastr-core-r')
source_gist('https://gist.github.com/psychemedia/11187809')
source_gist
https://gist.github.com/hadley/6872663/raw/hi.r
source_url('https://gist.github.com/hadley/6872663/raw/hi.r')
source_url('https://gist.githubusercontent.com/psychemedia/11187809/raw/ergastR-core.R')
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/Dropbox/wranglingf1datawithr/src/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
dd=dbGetQuery(f1, ("SELECT * FROM p1Results WHERE year=2012 AND race='MALAYSIA'"))
library(ggplot2)
dd$pos=as.integer(dd$pos)
g=ggplot(dd)+geom_point(aes(x=pos,y=time,col=team))
g=g+xlab('Position')+ylab('Time (s)')+ggtitle('F1 Malaysia, 2012: FP1 Laptimes')
# We can set the title of the legend, or remove it, as in this case.
# Note the default ordering in the legend is alphabetical and a default
# colour palette is used.
g=g+ guides(fill=guide_legend(title=NULL))
g
?abline
g+abline(h=99)
g+goem_hline(yintercept=99)
g+geom_hline(yintercept=99)
g+geom_hline(yintercept=98.5)
g+geom_hline(yintercept=98.4)
g+geom_hline(yintercept=98.6)
g+geom_hline(yintercept=98.7)
g+geom_hline(yintercept=98.65)
g+geom_hline(yintercept=98.65)+geom_hline(yintercept=99.65,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.5,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.75,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.7,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.9,col='grey')+geom_hline(yintercept=101.5,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.8,col='grey')+geom_hline(yintercept=101.5,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.5,col='grey')
g+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.3,col='grey')
ddx=dd
ddx
require(plyr)
?transform
arrange(ddx,pos)
ddx=arrange(ddx,pos)
?diff
ddx=arrange(ddx,pos)
ddx$delta=c(0,diff(ddx$natGap))
head(ddx,n=3)
ggplot(ddx)+geom_bar(aes(x=pos,y=delta),stat='identity')
ggplot(ddx)+geom_bar(aes(x=pos,y=delta),stat='identity')+geom_hline(yintercept=0.25)
ggplot(ddx)+geom_bar(aes(x=pos,y=delta),stat='identity')+geom_hline(yintercept=0.25,col='grey')
ggplot(ddx)+geom_hline(yintercept=0.25,col='grey')+geom_bar(aes(x=pos,y=delta),stat='identity')
ggplot(dd) + geom_line(aes(x=pos,y=gap))
ggplot(ddx) + geom_hline(yintercept=0.25,col='grey') + geom_line(aes(x=pos,y=delta))
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap))
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.9),arrow=arrow(),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.9,arrow=arrow(),show_guide=F)
library(grid)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.9,arrow=arrow(),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.6,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.65,ar
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=10.5,xend=10.5,y=2,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.5,yend=2,arrow=arrow(length = unit(0.1,"cm")),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.5,yend=1,arrow=arrow(length = unit(0.1,"cm")),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1,arrow=arrow(length = unit(0.1,"cm")),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1.1,arrow=arrow(length = unit(0.1,"cm")),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1.1,arrow=arrow(length = unit(0.1,"cm"),col='red'),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F,col='red')
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1.1,arrow=arrow(length = unit(0.1,"cm"),col='red'),show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm"),col='red'),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1.1,arrow=arrow(length = unit(0.1,"cm")),col='red',show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap)) + geom_point(aes(x=pos,y=gap)) + geom_segment(x=5.5,xend=5.5,y=1.6,yend=1.1,arrow=arrow(length = unit(0.1,"cm")),col='blue',show_guide=F) + geom_segment(x=10.5,xend=10.5,y=2.15,yend=1.65,arrow=arrow(length = unit(0.1,"cm")),col='blue',show_guide=F)
colify=function(datalist,cols){
df=data.frame(matrix(datalist, nrow=length(datalist)/length(cols), byrow=T))
names(df)=cols
df
}
arrows=colify(c(5.5,5.5,1.6,1.1,10,5,10,5,2.15,1.65),c('tailx','headx','taily','heady'))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,x=tailx,xend=headx,y=taily,yend=heady)
arrows
arrows=colify(c(5.5,5.5,1.6,1.1,10.5,10.5,2.15,1.65),c('tailx','headx','taily','heady'))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady,arrow=arrow(length = unit(0.1,"cm")),col='blue',show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady,arrow=arrow(length = unit(0.1,"cm"))),col='blue',show_guide=F)
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady,arrow=arrow(length = unit(0.1,"cm")),col='blue',show_guide=F))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady,arrow=arrow(length = unit(0.1,"cm")),show_guide=F),col='blue')
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm"),show_guide=F),col='blue')
ggplot(dd) + geom_line(aes(x=pos,y=gap))+geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')
ggplot(dd) + geom_line(aes(x=pos,y=gap))+ geom_point(aes(x=pos,y=gap)) +geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')
ggplot(dd) + geom_line(aes(x=pos,y=gap))+ geom_point(aes(x=pos,y=gap)) +geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')+xlim(0,15)
ggplot(dd) + geom_line(aes(x=pos,y=gap))+ geom_point(aes(x=pos,y=gap)) +geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')+xlim(0,15)+ylim(0,2.1)
arrows=colify(c(5.5,5.5,1.2,1.1,10.5,10.5,1.75,1.65),c('tailx','headx','taily','heady'))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+ geom_point(aes(x=pos,y=gap)) +geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')+xlim(0,15)+ylim(0,2)
arrows=colify(c(5.5,5.5,1.2,1.01,10.5,10.5,1.75,1.65),c('tailx','headx','taily','heady'))
ggplot(dd) + geom_line(aes(x=pos,y=gap))+ geom_point(aes(x=pos,y=gap)) +geom_segment(data=arrows,aes(x=tailx,xend=headx,y=taily,yend=heady),arrow=arrow(length = unit(0.1,"cm")),col='blue')+xlim(0,15)+ylim(0,2)
ggplot(dd)+geom_point(aes(x=pos,y=time,col=team,shp=team))
ggplot(dd)+geom_point(aes(x=pos,y=time,col=team,shape=team))
ddx$percent=ddx$time/min(ddx$time)
ddx
ddx$percent=100*ddx$time/min(ddx$time)
ddx
ddx$percent=100*ddx$time/min(ddx$time)
ggplot(ddx) + geom_bar(aes(x=pos,y=percent),stat='identity') + geom_hline(yintercept=107,col='grey')
ggplot(ddx) + geom_bar(aes(x=pos,y=percent),stat='identity') + geom_hline(yintercept=107,col='grey')+xlim(100,110)
ggplot(ddx) + geom_bar(aes(x=pos,y=percent),stat='identity') + geom_hline(yintercept=107,col='grey')+ylim(100,110)
ggplot(ddx) + geom_point(aes(x=pos,y=percent),stat='identity') + geom_hline(yintercept=107,col='grey')+ylim(100,110)
?reorder
dd$laps=as.integer(dd$laps)
ggplot(dd)+geom_bar(aes(x=reorder(driverNum,laps),y=laps),stat='identity')
ggplot(dd)+geom_bar(aes(x=-reorder(driverName,laps),y=laps),stat='identity')
ggplot(dd)+geom_bar(aes(x=-reorder(driverName,laps),y=laps),stat='identity')
ggplot(dd)+geom_bar(aes(x=reorder(driverName,laps),y=laps),stat='identity')
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps),stat='identity')
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps),stat='identity')+theme(axis.text.x = element_text(angle = 45, hjust = 1))
g=ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps),stat='identity')+theme(axis.text.x = element_text(angle = 45, hjust = 1))
g
g + coord_flip()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,col=factor(pos<=5)),stat='identity')+theme(axis.text.x = element_text(angle = 45, hjust = 1)) + coord_flip()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor(pos<=5)),stat='identity')+theme(axis.text.x = element_text(angle = 45, hjust = 1)) + coord_flip()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor(pos>5)),stat='identity')+theme(axis.text.x = element_text(angle = 45, hjust = 1)) + coord_flip()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor(pos>5)),stat='identity')+ coord_flip()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor(pos>5)),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+ guides(fill=guide_legend(title='Top 5'))
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor(pos<=5)),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+ guides(fill=guide_legend(title='Top 5'))
dd[["top5"]] = ifelse(ddpos <= 5, "top5", "notTop5")
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor()),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ guides(fill=guide_legend(title=NULL))
dd[["top5"]] = ifelse(dd$pos <= 5, "top5", "notTop5")
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor()),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ guides(fill=guide_legend(title=NULL))
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=factor()),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ guides(fill=guide_legend(title=NULL))
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ theme(legend.position="none")+theme_bw()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ theme(legend.position="none")+theme_minimal()
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+ theme(legend.position="none")+theme_classic()
```
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+theme_classic(legend.position="none")
?teme_classic
?theme_classic
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,fill=top5),stat='identity')+ coord_flip()+ylab(NULL)+xlab('Laps')+scale_fill_manual(values = c("top5" = "darkblue", "notTop5" = "lightgrey"))+theme_classic()+ theme(legend.position="none")
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(aes(x=time,y="Name",label=driverName),angle=90,size=3)+ theme_classic()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(aes(x=time,y="Name",label=team),angle=90,size=3)+ theme_classic()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(aes(x=time,y="Name",label=team),angle=90,size=3)+ theme_classic()+ coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(aes(x=time,y="Name",label=team),size=3)+ theme_classic()+ coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset(pos%% 2),aes(x=time,y="Name.1",label=team),size=3)+ theme_classic()+ coord_flip()
)
subset(dd,subset(pos%% 2))
subset(dd,subset=(pos%% 2))
subset(dd,subset=(pos %% 2))
subset(dd,subset=(pos %% 2=T))
subset(dd,subset=(pos %% 2==0))
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(subset(dd,subset=(pos %% 2==0),aes(x=time,y="Name",label=team),size=3)+geom_text(subset(dd,subset=(pos %% 2!=0),aes(x=time,y="Name2",label=team),size=3)+ theme_classic()+ coord_flip()
)
)
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(aes(x=time,y="Name",label=team),size=3)+ theme_classic()+ coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(subset=(pos %% 2!=0)),aes(x=time,y="Name",label=team),size=3)+geom_text(data=subset(subset=(pos %% 2!=0)),aes(x=time,y="Name1",label=team),size=3)+ theme_classic()+ coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="Name",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="Name1",label=team),size=3)+ theme_classic()+ coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="pos odd",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="pos even",label=team),size=3)+ theme_classic()+ coord_flip()
2%%2
3%%2
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="pos odd",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="pos even",label=team),size=3)+ theme_classic()+ coord_flip()
dd
dd['pos']
dd[['pos']]
dd$pos
g = ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,group=team),stat='identity')
g
ggplot(dd)+geom_bar(aes(x=reorder(driverName,-laps),y=laps,group=team),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=reorder(team
,-laps),y=laps,group=team),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=team),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,fill=factor(driver)),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,fill=factor(driverName)),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',position='dodge')+scale_fill_manual(values=c('blue','grey'))
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',position='dodge')+scale_fill_brewer()
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill=c(1,2)),stat='identity',position='dodge')+scale_fill_brewer()
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill='c(1,2)'grey''),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill='grey''),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill='grey'),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),,stat='identity',fill='grey',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),,stat='identity',fill=c('grey','blue'),position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill='grey'),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),fill='grey'),stat='identity',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=reorder(team,laps),y=laps,group=factor(driverName)),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=reorder(team,laps),y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge',order=laps)+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps') scale_x_discrete(limits=dd$laps)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')+ scale_x_discrete(limits=dd$laps)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps') scale_x_discrete(limits=dd$laps)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dds=reorder(dd$driverNum,dd$laps)
ggplot(dds)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dds
dds$driverNum=reorder(dd$driverNum,dd$laps)
?reorder
reorder(dd$driverNum,dd$laps)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
reorder(dd$driverNum,dd$laps)
InsectSprays
dds['driverNum'] = reorder(dd['driverNum'], dd['laps'])
dd['driverNum'] = reorder(dd['driverNum'], dd['laps'])
reorder(dd['driverNum'], dd['laps'])
dd=dbGetQuery(f1, ("SELECT * FROM p1Results WHERE year=2012 AND race='MALAYSIA'"))
reorder(dd['driverNum'], dd['laps'])
reorder(dd$driverNum,dd$laps)
dd=dbGetQuery(f1, ("SELECT * FROM p1Results WHERE year=2012 AND race='MALAYSIA'"))
reorder(dd$driverNum,dd$laps)
dd$laps=as.integer(dd$laps)
reorder(dd$driverNum,dd$laps)
reorder(dd['driverNum'], dd['laps'])
reorder(dd$driverNum,dd$laps)
dd$driverNum=reorder(dd$driverNum,dd$laps)
dd
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverNum),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dd$driverName=reorder(dd$driverName,dd$laps)
dd
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dd$driverName=reorder(dd$driverName,-dd$laps)
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName),order=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dd
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.3,col='grey')+coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.3,col='grey')
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()+geom_vline(xintercept=98.65,col='grey')+geom_vline(xintercept=99.6,col='grey')+geom_vline(xintercept=100.7,col='grey')+geom_vline(xintercept=101.3,col='grey')
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()+geom_vline(xintercept=98.65,col='grey')
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,..",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="pos odd",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="pos even",label=team),size=3)+ theme_classic()+ coord_flip()
dd$laps = as.integer(dd$laps)
dd$pos=as.integer(dd$pos)
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+coord_flip() +geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.3,col='grey')
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+geom_hline(yintercept=98.65,col='grey')+geom_hline(yintercept=99.6,col='grey')+geom_hline(yintercept=100.7,col='grey')+geom_hline(yintercept=101.3,col='grey')+coord_flip()
ggplot(dd)+geom_point(aes(x=time,y="Time"))+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",label=team),size=3)+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",label=team),size=3)+ theme_classic()+ ylab(NULL)+geom_vline(xintercept=98.65,col='grey')+geom_vline(xintercept=99.6,col='grey')+geom_vline(xintercept=100.7,col='grey')+geom_vline(xintercept=101.3,col='grey')+coord_flip()
strsplit(dd$team,'-')
strsplit(dd$team,'-')[-1]
strsplit(dd$team,'-')[[1]]
strsplit(dd$team,'-')[[2]]
strsplit(dd$team,'-')[2]
strsplit(dd$team,'-')
dd$engine=strsplit(dd$team,'-')
dd
dd$engine=tail(strsplit(dd$team,'-'),n=1)
dd
tail(strsplit(dd$team,'-'),n=1)
require(plyr)
transform(dd, engine = tail(strsplit(dd$team,'-'),n=1) )
ddply(dd, .(driverName),engine = tail(strsplit(team,'-'),n=1) )
ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-'),n=1) )
ddply(dd, .(driverName),mutate,engine = strsplit(team,'-')[length(strsplit(team,'-'))] )
strsplit(team,'-')
strsplit(dd$team,'-')
tail(c(1,3,4),n=1)
ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-'),n=1) )
dd=ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-'),n=1) )
tail(dd$engine,n=1)
ddply(dd,mutate,e2,tail(engine,n=1))
ddply(dd,mutate,e2=tail(engine,n=1))
ddply(dd,.(driverName),mutate,e2=tail(engine,n=1))
?sapply
sapply(dd$team,function(x) tail(strsplit(x,'-'),n=1) )
sapply(dd$team,function(x) strsplit(x,'-')[length(strsplit(x,'-'))] )
sapply(dd$team,function(x) strsplit(x,'-')[1] )
sapply(dd$team,function(x) strsplit(x,'-')[[1]] )
sapply(dd$team,function(x) strsplit(x,'-')[[0]] )
sapply(dd$team,function(x) strsplit(x,'-')[1][1])
sapply(dd$team,function(x) strsplit(x,'-')[[1]][1])
ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-')[[1]],n=1) )
ggplot(dd)+geom_bar(aes(x=reorder(team,laps),y=laps,group=factor(driverName)),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=reorder(team,laps),y=laps),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps,group=factor(driverName)),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team,y=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=team~driverName,y=laps),stat='identity',fill='grey',position='dodge')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
?geom_bar
ggplot(dd)+geom_bar(aes(x=reorder(engine,laps),y=laps),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dd
dd=ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-')[[1]],n=1) )
dd=ddply(dd, .(driverName),mutate,engine = tail(strsplit(team,'-')[[1]],n=1) )
dd
ggplot(dd)+geom_bar(aes(x=reorder(engine,laps),y=laps),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=engine,y=laps),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=engine,y=laps,fill=team),stat='identity',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
dd$team=reorder(dd$team,dd$laps)
ggplot(dd)+geom_bar(aes(x=engine,y=laps,fill=team),stat='identity',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ggplot(dd)+geom_bar(aes(x=engine,y=laps),stat='identity',fill='grey',position='stack')+ theme(axis.text.x = element_text(angle = 45, hjust = 1))+xlab(NULL)+ylab('Laps')
ddply(dd,.(engine,team),summarise,count)
ddply(dd,.(engine,team),summarise,nrow(pos))
ddply(dd,.(engine,team),summarise,length(engine))
ddply(dd,.(engine),summarise,length(engine))
count(dd[, c('engine','team')])
?unique
unique(dd[, c('engine','team')])
?count
engineTeams=unique(dd[, c('engine','team')])
count(engineTeams,'engine')
ddply(dd,.(engine),summarise,mlaps=mean(laps),tlaps=sum(laps))
ddply(dd,.(engine),summarise,meanLaps=mean(laps),totLaps=sum(laps),medianLaps=median(laps))
ddply(dd,.(engine),summarise,totLaps=sum(laps),meanLaps=mean(laps),medianLaps=median(laps))
g=ggplot(dd) + geom_point(aes(x=time,y="Time"))
#Split the drivers into two groups - odd position number and even position number
#Use each group as a separate y-axis categorical value
g=g+geom_text(data=subset(dd,subset=(pos %% 2!=0)),aes(x=time,y="1,3,5,...",col=engine, label=team),size=3)
g=g+geom_text(data=subset(dd,subset=(pos %% 2==0)),aes(x=time,y="2,4,6,...",col=engine, label=team),size=3)
#Tweak the theme
g=g+theme_classic() + ylab(NULL)
#Add in some intercept lines using the values we used before
g=g+geom_vline(xintercept=98.65,col='grey')+geom_vline(xintercept=99.6,col='grey')+geom_vline(xintercept=100.7,col='grey')+geom_vline(xintercept=101.3,col='grey')
#Flip the co-ordinates
g=g+coord_flip()
g
